(()=>{"use strict";var t,e,i;!function(t){t.CONDITIONS={new:{value:"nwt",label:"NWT (New With Tags)"},like_new:{value:"nwot",label:"NWOT (New Without Tags)"},good:{value:"good",label:"Good - Used"},fair:{value:"fair",label:"Fair - Used"},poor:{value:"poor",label:"Poor - Used"}}}(t||(t={})),function(t){t.CONDITIONS={new:{value:"new",label:"New"},like_new:{value:"like_new",label:"Like New"},good:{value:"good",label:"Good"},fair:{value:"fair",label:"Fair"},poor:{value:"poor",label:"Poor"}}}(e||(e={})),function(t){t.CONDITIONS={new:{value:"brand_new",label:"Brand new"},like_new:{value:"like_new",label:"Like new"},good:{value:"used_excellent",label:"Used - Excellent"},fair:{value:"used_good",label:"Used - Good"},poor:{value:"used_fair",label:"Used - Fair"}},t.PARCEL_SIZES={extra_extra_small:{maxOz:4,label:"Extra extra small",price:4.99},extra_small:{maxOz:8,label:"Extra small",price:5.99},small:{maxOz:12,label:"Small",price:6.49},medium:{maxLb:1,label:"Medium",price:7.99},large:{maxLb:2,label:"Large",price:11.99},extra_large:{maxLb:10,label:"Extra large",price:13.99}}}(i||(i={})),Error;const o=(...t)=>{},a=(...t)=>{console.info("[Compr Extension]",...t)},n=(...t)=>{console.warn("[Compr Extension]",...t)},l=(...t)=>{console.error("[Compr Extension]",...t)},s=new class{delay(t,e){const i=Math.floor(Math.random()*(e-t+1))+t;return new Promise(t=>setTimeout(t,i))}async typeText(t,e){t.focus(),t.value="";for(const i of e)t.value+=i,t.dispatchEvent(new Event("input",{bubbles:!0})),await this.delay(50,150);t.dispatchEvent(new Event("change",{bubbles:!0})),t.blur()}async clickElement(t){await this.delay(500,2e3),t.scrollIntoView({behavior:"smooth",block:"center"}),await this.delay(200,500),t.click()}async waitForElement(t,e=1e4){const i=Date.now();for(;Date.now()-i<e;){const e=document.querySelector(t);if(e)return e;await this.delay(100,300)}throw new Error(`Element not found: ${t}`)}async downloadImage(t){const e=await fetch(t);if(!e.ok)throw new Error(`Failed to download image: ${e.statusText}`);return await e.blob()}async uploadImages(t){if(!t||0===t.length)return void n("No photo URLs provided, skipping image upload");a(`Uploading ${t.length} images to Depop`,t);const e=t.slice(0,4);let i=0;for(let t=0;t<e.length;t++){o((e.length,e[t]));try{const o=await this.waitForElement('input[data-testid="upload-input__input"]');a("Found file input:",o),a(`Downloading image from: ${e[t]}`);const n=await this.downloadImage(e[t]);a(`Downloaded blob: size=${n.size}, type=${n.type}`);const l=`image-${t+1}.jpg`,s=new File([n],l,{type:n.type||"image/jpeg"});a(`Created file: name=${s.name}, size=${s.size}, type=${s.type}`);const r=new DataTransfer;r.items.add(s),a(`DataTransfer files: ${r.files.length}`),o.files=r.files;const c=["input","change"];for(const t of c)o.dispatchEvent(new Event(t,{bubbles:!0}));a(`Triggered events for image ${t+1}, waiting for upload...`),await this.delay(2e3,3e3),i++,a(`Successfully uploaded image ${t+1}/${e.length}`)}catch(e){l(`Failed to upload image ${t+1}:`,e)}}if(0===i)throw new Error("Failed to upload any images");a(`${i}/${e.length} images uploaded successfully`)}async fillTitle(t){}async fillDescription(t){const e=t.length>1e3?t.substring(0,1e3):t,i=await this.waitForElement('textarea#description[name="description"]');await this.typeText(i,e)}async selectCategory(t,e){try{const i=await this.waitForElement('input#group-input[role="combobox"]');if(await this.clickElement(i),await this.delay(1e3,1500),t){const e=document.querySelectorAll('ul#group-menu li[role="option"]');a(`Found ${e.length} category options`);for(const i of Array.from(e)){const e=i.textContent?.trim()||"";if(e.toLowerCase().includes(t.toLowerCase())){a(`Selecting category: ${e}`),await this.clickElement(i),await this.delay(1e3,1500);break}}}else{const t=document.querySelector('ul#group-menu li[role="option"]');t&&(await this.clickElement(t),await this.delay(1e3,1500))}if(e){await this.delay(1e3,1500);const t=await this.waitForElement('input#productType-input[role="combobox"]',5e3);await this.clickElement(t),await this.delay(1e3,1500);const i=document.querySelectorAll('ul#productType-menu li[role="option"]');a(`Found ${i.length} subcategory options`);for(const t of Array.from(i)){const i=t.textContent?.trim()||"";if(i.toLowerCase().includes(e.toLowerCase())){a(`Selecting subcategory: ${i}`),await this.clickElement(t),await this.delay(500,1e3);break}}}}catch(t){throw n("Failed to select category:",t),t}}async fillBrand(t){try{const e=await this.waitForElement('input#brand-input[role="combobox"]');if(t){await this.typeText(e,t),await this.delay(500,1e3);const i=document.querySelectorAll('ul#brand-menu li[role="option"]');i.length>0&&(a("Selecting first brand option"),await this.clickElement(i[0]))}else{await this.typeText(e,"No brand"),await this.delay(500,1e3);const t=document.querySelectorAll('ul#brand-menu li[role="option"]');t.length>0&&await this.clickElement(t[0])}}catch(t){throw n("Failed to fill brand:",t),t}}async selectSize(t){if(t)try{const e=await this.waitForElement('input#variants-input[role="combobox"]',5e3);await this.clickElement(e),await this.delay(500,1e3);const i=document.querySelectorAll('ul#variants-menu li[role="option"]');a(`Found ${i.length} size options`);for(const e of Array.from(i)){const i=e.textContent?.toLowerCase()||"";if(i.includes(t.toLowerCase()))return a(`Selecting size: ${i}`),void await this.clickElement(e)}i.length>0&&(n(`Size "${t}" not found, selecting first option`),await this.clickElement(i[0]))}catch(t){a("Size field not found or failed to select - skipping (optional)")}}async selectColor(t){if(t)try{const e=await this.waitForElement('input#colour-input[role="combobox"]',5e3);await this.clickElement(e),await this.delay(500,1e3);const i=document.querySelectorAll('ul#colour-menu li[role="option"]');a(`Found ${i.length} color options`);for(const e of Array.from(i)){const i=e.textContent?.toLowerCase()||"";if(i.includes(t.toLowerCase()))return a(`Selecting color: ${i}`),void await this.clickElement(e)}n(`Color "${t}" not found in options`)}catch(t){a("Color field not found or failed to select - skipping (optional)")}}async selectCondition(t){const e=i.CONDITIONS[t]||i.CONDITIONS.good;try{const t=await this.waitForElement('input#condition-input[role="combobox"]');await this.clickElement(t),await this.delay(500,1e3);const i=document.querySelectorAll('ul#condition-menu li[role="option"]');a(`Found ${i.length} condition options`);for(const t of Array.from(i)){const i=t.textContent?.trim()||"";if(i.toLowerCase()===e.label.toLowerCase())return a(`Selecting condition: ${i}`),void await this.clickElement(t)}for(const t of Array.from(i)){const i=t.textContent?.toLowerCase()||"";if(i.includes(e.label.toLowerCase()))return a(`Selecting condition (partial match): ${i}`),void await this.clickElement(t)}for(const t of Array.from(i))if((t.textContent?.toLowerCase()||"").includes("good"))return n("Using default condition: Good"),void await this.clickElement(t)}catch(t){throw n("Failed to select condition:",t),t}}async fillPrice(t){try{const e=await this.waitForElement('input[data-testid="priceAmount__input"]');e.focus(),await this.delay(100,200),e.select(),e.value=t.toFixed(2),e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),await this.delay(300,500),e.blur(),a("Price set to:",e.value)}catch(t){throw n("Failed to fill price:",t),t}}async selectShipping(t,e){try{const i=16*(t||0)+(e||0),o=i/16;let l="Medium";l=i<4?"Extra extra small":i<8?"Extra small":i<12?"Small":o<1?"Medium":o<2?"Large":"Extra large",a(`Selecting parcel size: ${l} (${o.toFixed(2)} lb)`);const s=await this.waitForElement('input#shippingMethods-input[role="combobox"]');await this.clickElement(s),await this.delay(500,1e3);const r=document.querySelectorAll('ul#shippingMethods-menu li[role="option"]');a(`Found ${r.length} shipping options`);for(const t of Array.from(r))if((t.textContent?.toLowerCase()||"").includes(l.toLowerCase()))return a(`Selecting shipping option: ${l}`),void await this.clickElement(t);for(const t of Array.from(r))if((t.textContent?.toLowerCase()||"").includes("medium"))return n("Using default parcel size: Medium"),void await this.clickElement(t)}catch(t){throw n("Failed to select shipping:",t),t}}async submitListing(){try{const t=await this.waitForElement('button[type="submit"]',1e4);a("Found Post button, clicking..."),await this.clickElement(t),await this.delay(3e3,5e3);const e=window.location.href;a("Current URL after submission:",e);const i=e.match(/\/products\/([a-zA-Z0-9_-]+)/),o=i?i[1]:"success";return a("Listing submitted successfully:",{platformListingId:o,platformUrl:e}),{platformListingId:o,platformUrl:e}}catch(t){throw l("Failed to submit listing:",t),t}}async createListing(t){try{a("Starting Depop listing creation for:",t.title),a("Listing data received:",JSON.stringify(t)),a("Photo URLs:",t.photo_urls),await this.uploadImages(t.photo_urls),await this.fillTitle(t.title),await this.fillDescription(t.description),await this.selectCategory(t.depop_category||t.category,t.depop_subcategory||null),await this.fillBrand(t.brand),await this.selectSize(t.size),await this.selectColor(t.color),await this.selectCondition(t.condition),await this.fillPrice(t.price),await this.selectShipping(t.weight_lb,t.weight_oz),a("Waiting for form to be ready for submission..."),await this.delay(2e3,3e3);const e=await this.submitListing();return{success:!0,listingId:t.id,platform:"depop",platformListingId:e.platformListingId,platformUrl:e.platformUrl}}catch(e){return l("Failed to create Depop listing:",e),{success:!1,listingId:t.id,platform:"depop",error:e instanceof Error?e.message:"Unknown error"}}}};chrome.runtime.onMessage.addListener((t,e,i)=>{if(t.type,"CREATE_LISTING"===t.type){const{listingData:e}=t.payload;return s.createListing(e).then(t=>{i(t)}).catch(t=>{i({success:!1,listingId:e.id,platform:"depop",error:t.message})}),!0}}),a("Depop content script loaded")})();