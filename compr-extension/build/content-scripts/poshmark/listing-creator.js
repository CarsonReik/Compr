(()=>{"use strict";var t,e;!function(t){t.CONDITIONS={new:{value:"nwt",label:"NWT (New With Tags)"},like_new:{value:"nwot",label:"NWOT (New Without Tags)"},good:{value:"good",label:"Good - Used"},fair:{value:"fair",label:"Fair - Used"},poor:{value:"poor",label:"Poor - Used"}}}(t||(t={})),function(t){t.CONDITIONS={new:{value:"new",label:"New"},like_new:{value:"like_new",label:"Like New"},good:{value:"good",label:"Good"},fair:{value:"fair",label:"Fair"},poor:{value:"poor",label:"Poor"}}}(e||(e={})),Error;const i=(...t)=>{},a=(...t)=>{console.info("[Compr Extension]",...t)},n=(...t)=>{console.warn("[Compr Extension]",...t)},o=(...t)=>{console.error("[Compr Extension]",...t)},l=new class{delay(t,e){const i=Math.floor(Math.random()*(e-t+1))+t;return new Promise(t=>setTimeout(t,i))}async typeText(t,e){t.focus(),t.value="";for(const i of e)t.value+=i,t.dispatchEvent(new Event("input",{bubbles:!0})),await this.delay(50,150);t.dispatchEvent(new Event("change",{bubbles:!0})),t.blur()}async clickElement(t){await this.delay(500,2e3),t.scrollIntoView({behavior:"smooth",block:"center"}),await this.delay(200,500),t.click()}async waitForElement(t,e=1e4){const i=Date.now();for(;Date.now()-i<e;){const e=document.querySelector(t);if(e)return e;await this.delay(100,300)}throw new Error(`Element not found: ${t}`)}async downloadImage(t){const e=await fetch(t);if(!e.ok)throw new Error(`Failed to download image: ${e.statusText}`);return await e.blob()}async uploadImages(t){if(!t||0===t.length)return void n("No photo URLs provided, skipping image upload");a(`Uploading ${t.length} images to Poshmark`,t);const e=t.slice(0,16);let l=0;for(let t=0;t<e.length;t++){i((e.length,e[t]));try{const i=await this.waitForElement('input#img-file-input[type="file"]');a("Found file input:",i),a(`Downloading image from: ${e[t]}`);const o=await this.downloadImage(e[t]);a(`Downloaded blob: size=${o.size}, type=${o.type}`);const s=`image-${t+1}.jpg`,r=new File([o],s,{type:o.type||"image/jpeg"});a(`Created file: name=${r.name}, size=${r.size}, type=${r.type}`);const c=new DataTransfer;c.items.add(r),a(`DataTransfer files: ${c.files.length}`),i.files=c.files;const d=["input","change","blur"];for(const t of d)i.dispatchEvent(new Event(t,{bubbles:!0}));a(`Triggered events for image ${t+1}, waiting for upload...`),await this.delay(1500,2e3);try{const t=await this.waitForElement('button[data-et-name="apply"]',5e3);a("Found Apply button, clicking..."),await this.clickElement(t),await this.delay(500,1e3)}catch(t){n("Could not find Apply button:",t)}l++,a(`Successfully uploaded image ${t+1}/${e.length}`)}catch(e){o(`Failed to upload image ${t+1}:`,e)}}if(0===l)throw new Error("Failed to upload any images");a(`${l}/${e.length} images uploaded successfully`)}async fillTitle(t){const e=await this.waitForElement('input[data-vv-name="title"]');await this.typeText(e,t)}async fillDescription(t){const e=await this.waitForElement('textarea[data-vv-name="description"]');await this.typeText(e,t)}async selectCategory(t){try{const t=document.querySelectorAll(".dropdown__selector--select-tag");let e=null;for(const i of Array.from(t))if(i.textContent?.includes("Select Category")){e=i;break}if(!e)throw new Error("Category selector not found");await this.clickElement(e),await this.delay(1500,2e3);const i=document.querySelectorAll("a.dropdown__menu__item");a(`Found ${i.length} dropdown items`);const o=Array.from(i).filter(t=>{const e=t.textContent?.toLowerCase().trim()||"";return e&&!e.includes("all categories")&&!e.includes("done")&&e.length>2});if(o.length>0){a(`Found ${o.length} category options:`,o.map(t=>t.textContent?.trim()));let t=o[0];for(const e of o)if((e.textContent?.toLowerCase()||"").includes("women")){t=e;break}a(`Selecting department: ${t.textContent?.trim()}`),await this.clickElement(t),await this.delay(1500,2e3);const e=document.querySelectorAll("li.dropdown__menu__item, a.dropdown__menu__item"),i=Array.from(e).filter(t=>{const e=t.textContent?.toLowerCase().trim()||"";return e&&!e.includes("all")&&e.length>2});if(i.length>0){a(`Found ${i.length} level 2 category options`);let t=i[i.length-1];for(const e of i)if("other"===(e.textContent?.toLowerCase().trim()||"")){t=e;break}a(`Selecting level 2 category: ${t.textContent?.trim()}`),await this.clickElement(t),await this.delay(1e3,1500);const e=document.querySelectorAll("li.dropdown__menu__item, a.dropdown__menu__item"),n=Array.from(e).filter(t=>{const e=t.textContent?.toLowerCase().trim()||"";return e&&!e.includes("all")&&!e.includes("done")&&e.length>2});n.length>0&&(a(`Found ${n.length} level 3 subcategory options, selecting first one: ${n[0].textContent?.trim()}`),await this.clickElement(n[0]))}}else n("No category options found in dropdown")}catch(t){n("Failed to select category:",t)}}async fillBrand(t){if(t)try{const e=await this.waitForElement('input[name="brand"], input[placeholder*="Brand"], input[data-test="brand"]');await this.typeText(e,t),await this.delay(500,1e3);const i=document.querySelector('[data-test="brand-suggestion"]:first-child, .autocomplete-option:first-child');i&&await this.clickElement(i)}catch(t){n("Failed to fill brand:",t)}}async fillSize(t){try{if(t)try{const e=await this.waitForElement(`button#size-${t}`,3e3);return a(`Found size button for "${t}", clicking...`),await this.clickElement(e),await this.delay(500,700),void a(`Size "${t}" selected via button`)}catch{}const e=await this.waitForElement('[data-test="size"]');if(await this.clickElement(e),await this.delay(500,1e3),t){const e=document.querySelectorAll('[data-test="size-option"], .dropdown__menu .dropdown__menu-item');for(const i of Array.from(e))if(i.textContent?.toLowerCase().includes(t.toLowerCase()))return void await this.clickElement(i);n(`Size "${t}" not found, selecting first option`);const i=e[0];i&&await this.clickElement(i)}else{const t=document.querySelector('[data-test="size-option"], .dropdown__menu .dropdown__menu-item:first-child');t&&await this.clickElement(t)}}catch(t){n("Failed to fill size:",t)}}async selectColors(t){if(t&&0!==t.length){a(`Selecting ${t.length} color(s):`,t);try{const e=await this.waitForElement('[data-et-name="color"]',5e3);await this.clickElement(e),await this.delay(1e3,1500);const o=t.slice(0,2);let l=0;for(const t of o)try{const e=document.querySelectorAll(".listing-editor__tile--color");i(e.length);for(const i of Array.from(e)){const e=i.querySelector("span")?.textContent?.trim();if(e&&e.toLowerCase()===t.toLowerCase()){const t=i.querySelector("a.color__circle--large");if(t){a(`Clicking color: ${e}`),await this.clickElement(t),await this.delay(500,700),l++;break}}}}catch(e){n(`Failed to select color "${t}":`,e)}a(`Successfully selected ${l} color(s)`)}catch(t){o("Failed to open color dropdown:",t)}}}async selectCondition(e){const i=t.CONDITIONS[e]||t.CONDITIONS.good;try{const t=await this.waitForElement('select[name="condition"], [data-test="condition-select"]'),e=Array.from(t.querySelectorAll("option")).find(t=>t.value===i.value||t.textContent?.includes(i.label));e&&(t.value=e.value,t.dispatchEvent(new Event("change",{bubbles:!0})))}catch(t){n("Failed to select condition:",t)}}async selectNewWithTags(t){if(t){a("Selecting New With Tags (NWT)");try{const t=await this.waitForElement('button[data-et-name="nwt_yes"]',5e3);await this.clickElement(t),await this.delay(500,700),a("NWT selected successfully")}catch(t){n("Failed to select NWT:",t)}}}async setQuantity(t,e){if(t<=1);else{a(`Setting multi-item quantity: ${t}`);try{const e=await this.waitForElement('button[data-et-name="multiple"]',5e3);await this.clickElement(e),await this.delay(1e3,1500);const i=await this.waitForElement('input[data-vv-name="quantityAvailable0"]',5e3);i.value=String(t),i.dispatchEvent(new Event("input",{bubbles:!0})),i.dispatchEvent(new Event("change",{bubbles:!0})),await this.delay(300,500),a(`Quantity set to: ${t}`)}catch(t){n("Failed to set quantity:",t)}}}async fillOriginalPrice(t){try{const e=await this.waitForElement('input[data-vv-name="originalPrice"]');e.focus(),await this.delay(100,200),e.value="",e.dispatchEvent(new Event("input",{bubbles:!0})),await this.delay(100,200);const i=String(Math.ceil(t));e.value=i,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),await this.delay(200,300),e.blur(),await this.delay(200,300),a("Original price set to:",e.value)}catch(t){n("Failed to fill original price:",t)}}async fillPrice(t){const e=await this.waitForElement('input[data-vv-name="listingPrice"]');e.focus(),await this.delay(100,200),e.value="",e.dispatchEvent(new Event("input",{bubbles:!0})),await this.delay(100,200);const i=String(Math.ceil(t));e.value=i,e.dispatchEvent(new Event("input",{bubbles:!0})),e.dispatchEvent(new Event("change",{bubbles:!0})),await this.delay(200,300),e.blur(),await this.delay(200,300),a("Listing price set to:",e.value)}async submitListing(){const t=await this.waitForElement('button[data-et-name="next"]');a("Found Next button, clicking to open confirmation modal..."),await this.clickElement(t),await this.delay(1500,2e3);const e=await this.waitForElement('button[data-et-name="list"]');a("Found List This Item button, clicking to submit listing..."),await this.clickElement(e),await this.delay(3e3,5e3);const i=window.location.href;if(i.includes("/feed"))return a("Redirected to feed - listing submitted successfully"),{platformListingId:"success",platformUrl:"https://poshmark.com/feed"};const n=i.split("/"),o=n[n.length-1],l=o.split("-").pop()||o;return a("Listing submitted successfully:",{platformListingId:l,platformUrl:i}),{platformListingId:l,platformUrl:i}}async createListing(t){try{a("Starting listing creation for:",t.title),a("Listing data received:",JSON.stringify(t)),a("Photo URLs:",t.photo_urls),await this.uploadImages(t.photo_urls),await this.fillTitle(t.title),await this.fillDescription(t.description),await this.selectCategory(t.poshmark_category||t.category),await this.fillBrand(t.brand),await this.fillSize(t.size),t.poshmark_color&&t.poshmark_color.length>0&&await this.selectColors(t.poshmark_color),await this.selectCondition(t.condition),t.poshmark_new_with_tags&&await this.selectNewWithTags(!0),await this.fillOriginalPrice(t.original_price||t.price),await this.fillPrice(t.price),t.quantity&&t.quantity>1&&await this.setQuantity(t.quantity,t.size||"");const e=await this.submitListing();return{success:!0,listingId:t.id,platform:"poshmark",platformListingId:e.platformListingId,platformUrl:e.platformUrl}}catch(e){return o("Failed to create listing:",e),{success:!1,listingId:t.id,platform:"poshmark",error:e instanceof Error?e.message:"Unknown error"}}}};chrome.runtime.onMessage.addListener((t,e,i)=>{if(t.type,"CREATE_LISTING"===t.type){const{listingData:e}=t.payload;return l.createListing(e).then(t=>{i(t)}).catch(t=>{i({success:!1,listingId:e.id,platform:"poshmark",error:t.message})}),!0}}),a("Poshmark content script loaded")})();