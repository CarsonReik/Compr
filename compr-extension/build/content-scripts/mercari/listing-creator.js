(()=>{"use strict";const t=(...t)=>{},e=(...t)=>{console.info("[Compr Extension]",...t)},i=(...t)=>{console.warn("[Compr Extension]",...t)},a=(...t)=>{console.error("[Compr Extension]",...t)},o=new class{delay(t,e){const i=Math.floor(Math.random()*(e-t+1))+t;return new Promise(t=>setTimeout(t,i))}async typeText(t,e){t.focus(),t.value="";for(const i of e)t.value+=i,t.dispatchEvent(new Event("input",{bubbles:!0})),await this.delay(50,150);t.dispatchEvent(new Event("change",{bubbles:!0})),t.blur()}async clickElement(t){await this.delay(500,2e3),t.scrollIntoView({behavior:"smooth",block:"center"}),await this.delay(200,500),t.click()}async waitForElement(t,e=1e4){const i=Date.now();for(;Date.now()-i<e;){const e=document.querySelector(t);if(e)return e;await this.delay(100,300)}throw new Error(`Element not found: ${t}`)}async downloadImage(t){const e=await fetch(t);if(!e.ok)throw new Error(`Failed to download image: ${e.statusText}`);return await e.blob()}async uploadImages(o){if(!o||0===o.length)return void i("No photo URLs provided, skipping image upload");e(`Uploading ${o.length} images to Mercari`,o);const n=o.slice(0,12);let s=0;await this.waitForElement('[data-testid="PhotoUploadBox"]'),e("Found photo upload box");for(let i=0;i<n.length;i++){t((n.length,n[i]));try{const t=document.querySelector('input[type="file"][accept*="image"]');if(!t)throw new Error("Could not find file input");e("Found file input:",t),e(`Downloading image from: ${n[i]}`);const a=await this.downloadImage(n[i]);e(`Downloaded blob: size=${a.size}, type=${a.type}`);const o=`image-${i+1}.jpg`,r=new File([a],o,{type:a.type||"image/jpeg"});e(`Created file: name=${r.name}, size=${r.size}, type=${r.type}`);const l=new DataTransfer;l.items.add(r),e(`DataTransfer files: ${l.files.length}`),t.files=l.files;const c=["input","change"];for(const e of c)t.dispatchEvent(new Event(e,{bubbles:!0}));e(`Triggered events for image ${i+1}, waiting for upload...`),await this.delay(2e3,3e3),s++,e(`Successfully uploaded image ${i+1}/${n.length}`)}catch(t){a(`Failed to upload image ${i+1}:`,t)}}if(0===s)throw new Error("Failed to upload any images");e(`${s}/${n.length} images uploaded successfully`)}async fillTitle(t){const e=await this.waitForElement('input[data-testid="Title"]');await this.typeText(e,t)}async fillDescription(t){const e=await this.waitForElement('textarea[data-testid="Description"]');await this.typeText(e,t)}async selectCategory(t){try{const t=await this.waitForElement("button.CategorySection__SelectButton-sc-d0fb8a6d-0",5e3);await this.clickElement(t),await this.delay(1e3,1500);const i=document.querySelectorAll(".CategoryDialog__ButtonWrapper-sc-13509435-1");if(i.length>0){e(`Found ${i.length} category options`);let t=i[0];for(const e of Array.from(i))if((e.textContent?.toLowerCase()||"").includes("women")){t=e;break}e(`Selecting category: ${t.textContent?.trim()}`),await this.clickElement(t),await this.delay(1500,2e3);const a=document.querySelectorAll(".CategoryDialog__ButtonWrapper-sc-13509435-1");if(a.length>0){e(`Found ${a.length} subcategory options`);let t=null;for(const e of Array.from(a))if("other"===(e.textContent?.toLowerCase().trim()||"")){t=e;break}t||(t=a[a.length-1]),e(`Selecting subcategory: ${t.textContent?.trim()}`),await this.clickElement(t),await this.delay(2e3,3e3)}}}catch(t){i("Failed to select category:",t)}}async fillBrand(t){try{const i=await this.waitForElement('input[data-testid="Brand"]'),a=t&&"n/a"!==t.toLowerCase()&&"none"!==t.toLowerCase()?t:"No brand";await this.typeText(i,a),await this.delay(500,1e3),await this.delay(500,1e3);const o=document.querySelectorAll('[role="option"]');o.length>0&&(e("Selecting first brand suggestion"),await this.clickElement(o[0]))}catch(t){throw i("Failed to fill brand:",t),t}}async selectCondition(t){try{const i={new:"ConditionNew",like_new:"ConditionLikeNew",good:"ConditionGood",fair:"ConditionFair",poor:"ConditionPoor"}[t]||"ConditionGood",a=await this.waitForElement(`label[data-testid="${i}"]`);await this.clickElement(a),await this.delay(500,1e3),e(`Selected condition: ${i}`)}catch(t){throw i("Failed to select condition:",t),t}}async selectSize(t){try{e("Waiting for size dropdown...");const a=await this.waitForElement('[data-testid="Size"]',2e4);a.scrollIntoView({behavior:"smooth",block:"center"}),await this.delay(500,1e3),e("Clicking size dropdown..."),await this.clickElement(a),await this.delay(1e3,1500);const o=document.querySelectorAll('[data-testid="Size-option"]');if(o.length>0){if(e(`Found ${o.length} size options`),!t||"n/a"===t.toLowerCase()||"none"===t.toLowerCase()){for(const t of Array.from(o))if(t.textContent?.includes("One Size"))return void await this.clickElement(t);return void await this.clickElement(o[0])}const a=t.toUpperCase();for(const e of Array.from(o)){const i=e.textContent||"";if(i.includes(a)||i.includes(t)||a.length<=3&&i.startsWith(a))return void await this.clickElement(e)}i(`Size "${t}" not found, selecting first option`),await this.clickElement(o[0])}}catch(t){throw i("Failed to select size:",t),t}}async fillPrice(t,a){try{const o=await this.waitForElement('input[data-testid="Price"]');if(o.focus(),await this.delay(100,200),o.value=String(Math.ceil(t)),o.dispatchEvent(new Event("input",{bubbles:!0})),o.dispatchEvent(new Event("change",{bubbles:!0})),await this.delay(300,500),o.blur(),await this.delay(1e3,1500),a&&a>0){e("Setting floor price for smart pricing:",a);const t=await this.waitForElement('input[data-testid="SmartPricingFloorPrice"]');t.focus(),await this.delay(100,200),t.value=String(Math.ceil(a)),t.dispatchEvent(new Event("input",{bubbles:!0})),t.dispatchEvent(new Event("change",{bubbles:!0})),await this.delay(200,300),t.blur()}else{e("Turning off smart pricing");try{if(document.querySelector('button[data-testid="SmartPricingButton"][aria-pressed="true"]')){const t=await this.waitForElement('button[data-testid="SmartPricingTurnOffButton"]',3e3);await this.clickElement(t),await this.delay(500,1e3)}}catch(t){i("Could not turn off smart pricing:",t)}}e("Price set to:",t)}catch(t){throw i("Failed to fill price:",t),t}}async submitListing(){try{const t=await this.waitForElement('button[data-testid="ListButton"]');e("Found List button, clicking to submit listing..."),await this.clickElement(t),await this.delay(3e3,5e3);const i=window.location.href;if(i.includes("/item/")||i.includes("/mypage/listings")){e("Listing submitted successfully");const t=i.match(/\/item\/m(\d+)/);return{platformListingId:t?t[1]:"success",platformUrl:i}}return e("Listing submitted (checking for success)"),{platformListingId:"success",platformUrl:i}}catch(t){throw a("Failed to submit listing:",t),t}}async createListing(t){try{e("Starting Mercari listing creation for:",t.title),e("Listing data received:",JSON.stringify(t)),e("Photo URLs:",t.photo_urls),await this.uploadImages(t.photo_urls),await this.fillTitle(t.title),await this.fillDescription(t.description),await this.selectCategory(t.category),await this.fillBrand(t.brand),await this.selectCondition(t.condition),await this.selectSize(t.size);const i=t.original_price&&t.original_price<t.price?t.original_price:void 0;await this.fillPrice(t.price,i);const a=await this.submitListing();return{success:!0,listingId:t.id,platform:"mercari",platformListingId:a.platformListingId,platformUrl:a.platformUrl}}catch(e){return a("Failed to create Mercari listing:",e),{success:!1,listingId:t.id,platform:"mercari",error:e instanceof Error?e.message:"Unknown error"}}}};chrome.runtime.onMessage.addListener((t,e,i)=>{if(t.type,"CREATE_LISTING"===t.type){const{listingData:e}=t.payload;return o.createListing(e).then(t=>{i(t)}).catch(t=>{i({success:!1,listingId:e.id,platform:"mercari",error:t.message})}),!0}}),e("Mercari content script loaded")})();